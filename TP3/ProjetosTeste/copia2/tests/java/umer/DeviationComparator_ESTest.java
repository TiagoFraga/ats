package umer;/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 19 09:54:51 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeviationComparator_ESTest extends DeviationComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeviationComparator deviationComparator0 = new DeviationComparator();
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(driver0).getDeviation();
      doReturn((String) null).when(driver0).getEmail();
      Driver driver1 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0).when(driver1).getDeviation();
      doReturn((String) null).when(driver1).getEmail();
      // Undeclared exception!
      try { 
        deviationComparator0.compare(driver0, driver1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.DeviationComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeviationComparator deviationComparator0 = new DeviationComparator();
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn((-797.720428), 1.0, 3988.9242038878647, 1.0).when(driver0).getDeviation();
      doReturn("@G0l{", "@G0l{").when(driver0).getEmail();
      int int0 = deviationComparator0.compare(driver0, driver0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DeviationComparator deviationComparator0 = new DeviationComparator();
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn((-2579.0), (-2579.0), (-1258.2230852814), 1.0).when(driver0).getDeviation();
      int int0 = deviationComparator0.compare(driver0, driver0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DeviationComparator deviationComparator0 = new DeviationComparator();
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(1119.286785, 1.0).when(driver0).getDeviation();
      int int0 = deviationComparator0.compare(driver0, driver0);
      assertEquals((-1), int0);
  }
}
