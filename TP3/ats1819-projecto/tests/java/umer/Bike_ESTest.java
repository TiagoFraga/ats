package umer;/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 18 18:45:20 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Bike_ESTest extends Bike_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("sI/*m|qq'+UzmH", 649.8571, point2D_Double0, "sI/*m|qq'+UzmH");
      Bike bike1 = bike0.clone();
      assertEquals(75.0, bike0.getSpeed(), 0.01);
      assertEquals(75.0, bike1.getSpeed(), 0.01);
      assertEquals(0.9, bike0.getPrice(), 0.01);
      assertEquals(1, bike0.getSeats());
      assertEquals(0.9, bike1.getPrice(), 0.01);
      assertEquals(1, bike1.getSeats());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", (-1.0), point2D_Double0, (String) null);
      Bike bike1 = bike0.clone();
      assertEquals(1, bike0.getSeats());
      assertEquals(75.0, bike0.getSpeed(), 0.01);
      assertEquals(0.9, bike0.getPrice(), 0.01);
      assertEquals(1, bike1.getSeats());
      assertEquals(0.9, bike1.getPrice(), 0.01);
      assertEquals(75.0, bike1.getSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", 0.0, point2D_Double0, "");
      Trip trip0 = new Trip();
      bike0.addTrip(trip0);
      // Undeclared exception!
      try { 
        bike0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Bike bike0 = null;
      try {
        bike0 = new Bike("", 0.0, (Point2D.Double) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.Vehicle", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Bike bike0 = null;
      try {
        bike0 = new Bike((Bike) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.Bike", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("<F8XbW+=A%d3J@I/0", 3319.2646965, point2D_Double0, "<F8XbW+=A%d3J@I/0");
      Bike bike1 = new Bike(bike0);
      assertEquals(75.0, bike0.getSpeed(), 0.01);
      assertEquals(0.9, bike0.getPrice(), 0.01);
      assertEquals(0.9, bike1.getPrice(), 0.01);
      assertEquals(1, bike1.getSeats());
      assertEquals(1, bike0.getSeats());
      assertEquals(75.0, bike1.getSpeed(), 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Bike bike0 = new Bike("", 0.0, point2D_Double0, "");
      Bike bike1 = bike0.clone();
      assertEquals(75.0, bike1.getSpeed(), 0.01);
      assertEquals(1, bike0.getSeats());
      assertEquals(0.9, bike0.getPrice(), 0.01);
      assertEquals(75.0, bike0.getSpeed(), 0.01);
      assertEquals(0.9, bike1.getPrice(), 0.01);
      assertEquals(1, bike1.getSeats());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Bike bike0 = null;
      try {
        bike0 = new Bike();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }
}
