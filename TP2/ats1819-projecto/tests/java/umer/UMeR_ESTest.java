package umer;/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 19 09:53:01 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.geom.Point2D;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UMeR_ESTest extends UMeR_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.getVehiclesP();
      uMeR0.getVehiclesP();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn((-361.7742160768), (-361.7742160768)).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      uMeR0.setWeather(4508);
      Point2D.Double point2D_Double1 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(4508).when(driver0).getExp();
      doReturn(0.0, 0.0).when(driver0).getTimeCompliance();
      doReturn(0.0).when(driver0).getTotalDistance();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn((double)4508, 1.2).when(vehicle0).getReliable();
      doReturn(1.2).when(vehicle0).getSpeed();
      uMeR0.realTime(point2D_Double0, point2D_Double1, driver0, vehicle0);
      // Undeclared exception!
      try { 
        uMeR0.doTripQueue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Vehicle vehicle0 = null;
      // Undeclared exception!
      try { 
        uMeR0.saveUMeR((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.getDriversP();
      Comparator<Client> comparator0 = (Comparator<Client>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordClient(comparator0);
      uMeR0.getMoneyGenerated();
      uMeR0.getVehiclesP();
      uMeR0.getTotalTime();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      uMeR0.setTrips((ArrayList<Trip>) null);
      uMeR0.toString();
      uMeR0.removeVehicle(vehicle0);
      Client client1 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripClosest(client1, point2D_Double0);
      uMeR0.setTotalDistance((-340.8));
      Point2D.Double point2D_Double1 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripClosest(client0, point2D_Double1);
      Client client2 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double2 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripClosest(client2, point2D_Double2);
      Point2D.Double point2D_Double3 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D_Double3).distance(any(java.awt.geom.Point2D.class));
      uMeR0.getVehiclesP();
      uMeR0.estimatedTime(point2D_Double3, point2D_Double3, (-1499.3603369));
      uMeR0.getTotalDistance();
      Client client3 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double4 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripSpecific(client3, "---Drivers---\n[]\n---Clients---\n[]\n---Vehicles---\n[]\n---Number of trips---\n0", point2D_Double4);
      uMeR0.getTotalTime();
      uMeR0.allUsers();
      Client client4 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double5 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripClosest(client4, point2D_Double5);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.getDates();
      uMeR0.getDriversP();
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      uMeR0.getDriversP();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      uMeR0.removeVehicle(vehicle0);
      uMeR0.setTripID(0);
      uMeR0.getDriversP();
      uMeR0.removeUser(user0);
      uMeR0.setDrivers((HashMap<String, Driver>) null);
      uMeR0.setMoneyGenerated((-3487.50749594546));
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordDriver(comparator0);
      ArrayList<Trip> arrayList0 = uMeR0.getTrips();
      uMeR0.setTrips(arrayList0);
      uMeR0.getVehiclesP();
      uMeR0.getMoneyGenerated();
      uMeR0.setTripID(718);
      uMeR0.getClients();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripSpecific(client0, "-w-a", point2D_Double0);
      // Undeclared exception!
      try { 
        uMeR0.addTrip("\u20AC", "\u20AC", "\u20AC", (Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "hS(\\+'@;n";
      try { 
        UMeR.loadUMeR("hS(+'@;n");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.getAllVehicles();
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordDriver(comparator0);
      uMeR0.getTotalDistance();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      uMeR0.registerCompanyVehicle("", vehicle0);
      Point2D.Double point2D_Double1 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.estimatedTime(point2D_Double0, point2D_Double1, 0.0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripClosest(client0, point2D_Double0);
      // Undeclared exception!
      try { 
        uMeR0.cancelTripQueue("u*xLLXITa*L*:f$Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      // Undeclared exception!
      try { 
        uMeR0.cancelTripQueue("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      HashMap<String, Driver> hashMap0 = uMeR0.getDriversP();
      uMeR0.setDrivers(hashMap0);
      HashMap<String, Client> hashMap1 = uMeR0.getClients();
      uMeR0.setClients(hashMap1);
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      uMeR0.removeUser(user0);
      uMeR0.getDriversP();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn((Boolean) null).when(driver0).isAvailable();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        uMeR0.newTrip(client0, driver0, vehicle0, point2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.setWeather((-2236));
      int int0 = 1;
      String string0 = ";D>Fdt)Oe.w";
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        uMeR0.realTime(point2D_Double0, point2D_Double0, driver0, (Vehicle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.getTotalTime();
      String string0 = "";
      // Undeclared exception!
      try { 
        uMeR0.changeDriverAvailability("", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      // Undeclared exception!
      try { 
        uMeR0.addRating("\n---Clients---\n", (-5039), (-5039));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      // Undeclared exception!
      try { 
        uMeR0.changeDriverAvailability("}", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.toString();
      uMeR0.setAllDrivers((HashMap<String, Driver>) null);
      // Undeclared exception!
      try { 
        uMeR0.getAllDrivers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        UMeR.loadUMeR((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      try { 
        uMeR0.saveUMeR("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn((Vehicle) null).when(vehicle0).clone();
      doReturn((String) null).when(vehicle0).getLicencePlate();
      uMeR0.getCompanies();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      uMeR0.closestAvailableTaxi(client0);
      // Undeclared exception!
      try { 
        uMeR0.registerVehicleP(vehicle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.getCompanies();
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(user0).clone();
      doReturn((String) null, (String) null, (String) null, (String) null).when(user0).getEmail();
      doReturn((String) null).when(user0).getName();
      uMeR0.registerUser(user0, (String) null);
      String string0 = "";
      int int0 = 0;
      // Undeclared exception!
      try { 
        uMeR0.doTripQueue("<QiL!Z2#*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((User) null).when(user0).clone();
      doReturn((String) null, (String) null).when(user0).getEmail();
      doReturn((String) null).when(user0).getName();
      uMeR0.registerUser(user0, "");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordDriver(comparator0);
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      UMeR uMeR1 = new UMeR();
      HashMap<String, Client> hashMap0 = uMeR1.getClients();
      uMeR0.setClients(hashMap0);
      uMeR0.closestAvailableTaxi(client0);
      uMeR0.getDriversP();
      uMeR0.getMoneyGenerated();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      // Undeclared exception!
      try { 
        uMeR0.doAllTripsQueue(")\nOwner : ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.getVehiclesP();
      uMeR0.getVehiclesP();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      uMeR0.setWeather(4508);
      Point2D.Double point2D_Double1 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn((Double) null).when(driver0).getTimeCompliance();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(vehicle0).getSpeed();
      // Undeclared exception!
      try { 
        uMeR0.realTime(point2D_Double0, point2D_Double1, driver0, vehicle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      HashMap<String, Driver> hashMap0 = uMeR0.getAllDrivers();
      uMeR0.setDrivers(hashMap0);
      // Undeclared exception!
      try { 
        uMeR0.estimatedTime((Point2D.Double) null, (Point2D.Double) null, 2.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.saveUMeR("(:%ns5Z.dU b");
      uMeR0.setTotalDistance(2012.85395046932);
      // Undeclared exception!
      try { 
        uMeR0.doAllTripsQueue("mnh&-?Ct@9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Comparator<Client> comparator0 = (Comparator<Client>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordClient(comparator0);
  }


  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn((Point2D.Double) null).when(client0).getPosition();
      doReturn((String) null).when(client0).getEmail();
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn((Boolean) null).when(driver0).isAvailable();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTrip(client0, driver0, vehicle0, point2D_Double0);
  }


  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      // Undeclared exception!
      try { 
        uMeR0.doTripQueue("umer.UMeR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      uMeR0.setWeather(3121);
      uMeR0.ordDriver(comparator0);
      uMeR0.getWeather();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn((-2445.665)).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      uMeR0.getClients();
      HashMap<String, Vehicle> hashMap0 = uMeR0.getVehiclesP();
      uMeR0.setVehiclesP(hashMap0);
      uMeR0.estimatedTime(point2D_Double0, point2D_Double0, (-5867.0));
      uMeR0.saveUMeR("<Tn6eL-W0%v+(B/LN!%");
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      uMeR0.registerCompany("<Tn6eL-W0%v+(B/LN!%", "<Tn6eL-W0%v+(B/LN!%");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<Tn6eL-W0%v+(B/LN!%");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      uMeR0.closestAvailableTaxi(client0);
      Client client1 = mock(Client.class, new ViolatedAssumptionAnswer());
      uMeR0.registerCompany("<Tn6eL-W0%v+(B/LN!%", "");
      Point2D.Double point2D_Double1 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripSpecific(client1, "", point2D_Double1);
      // Undeclared exception!
      try { 
        uMeR0.changeDriverVehicle("\n---Vehicles---\n", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(1090.7000231107666, 1.9).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(2847).when(driver0).getExp();
      doReturn(0.0, 0.0).when(driver0).getTimeCompliance();
      doReturn(1090.7000231107666).when(driver0).getTotalDistance();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn(1090.7000231107666, 1090.7000231107666).when(vehicle0).getReliable();
      doReturn(0.0).when(vehicle0).getSpeed();
      uMeR0.getClients();
      uMeR0.realTime(point2D_Double0, point2D_Double0, driver0, vehicle0);
      uMeR0.setTotalDistance(2.147483647E9);
      uMeR0.getTrips();
  }


  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(driver0).getExp();
      doReturn((Double) null, (Double) null).when(driver0).getTimeCompliance();
      doReturn(0.0).when(driver0).getTotalDistance();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(vehicle0).getReliable();
      doReturn(0.0).when(vehicle0).getSpeed();
      uMeR0.realTime(point2D_Double0, point2D_Double0, driver0, vehicle0);
      uMeR0.setTotalDistance(2.147483647E9);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("2");
      byte[] byteArray0 = new byte[2];
      UMeR uMeR0 = new UMeR();
      uMeR0.getDriversP();
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)100;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "2";
      try { 
        UMeR.loadUMeR("2");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.setTotalTime(2206.2904744);
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(4857.792580007337).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      Point2D.Double point2D_Double1 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.estimatedTime(point2D_Double0, point2D_Double1, (-2705.645824362799));
      // Undeclared exception!
      try { 
        uMeR0.addTrip("Z949 m?MzQpgU", (String) null, "", (Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("S.8kK&z%{|tq1\\W");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "L}K%~V7&-iDWk");
      String string0 = "S.8kK&z%{|tq1\\W";
      try { 
        UMeR.loadUMeR("S.8kK&z%{|tq1W");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripClosest((Client) null, point2D_Double0);
      uMeR0.getCompanies();
      HashMap<String, Client> hashMap0 = uMeR0.getClients();
      uMeR0.getDriversP();
      uMeR0.setClients(hashMap0);
      uMeR0.getClients();
      uMeR0.toString();
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordDriver(comparator0);
      String string0 = "";
      // Undeclared exception!
      try { 
        uMeR0.registerUser((User) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      HashMap<String, Driver> hashMap0 = null;
      uMeR0.setDrivers((HashMap<String, Driver>) null);
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      uMeR0.getWeather();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripClosest(client0, point2D_Double0);
      uMeR0.ordDriver(comparator0);
      Comparator<Driver> comparator1 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordDriver(comparator1);
      HashMap<String, Client> hashMap1 = uMeR0.getClients();
      uMeR0.setClients(hashMap1);
      // Undeclared exception!
      try { 
        uMeR0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.saveUMeR("(");
      uMeR0.removeVehicle((Vehicle) null);
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripSpecific(client0, "%6(T", point2D_Double0);
      uMeR0.getVehiclesP();
      uMeR0.getCompanies();
      uMeR0.registerCompany("", "%6(T");
      uMeR0.getAllDrivers();
      uMeR0.getCompanies();
      uMeR0.calculateTraffic((Vehicle) null, 331.99422004595);
      UMeR uMeR1 = UMeR.loadUMeR("(");
      ArrayList<Trip> arrayList0 = uMeR1.getTrips();
      uMeR0.setTrips(arrayList0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      try { 
        UMeR.loadUMeR("\nPre\u00E7o : ");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      String string0 = "";
      long long0 = 752L;
      LocalDate localDate0 = MockLocalDate.ofEpochDay(752L);
      Client client0 = new Client("", "", "", (String) null, localDate0);
      String string1 = "JcjFITNmj.F";
      uMeR0.registerUser(client0, "JcjFITNmj.F");
      Bike bike0 = null;
      try {
        bike0 = new Bike();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      uMeR0.removeUser(user0);
      HashMap<String, Client> hashMap0 = uMeR0.getClients();
      uMeR0.setClients(hashMap0);
      HashMap<String, Vehicle> hashMap1 = uMeR0.getAllVehicles();
      uMeR0.toString();
      uMeR0.setVehiclesP(hashMap1);
      uMeR0.getAllDrivers();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      HashMap<String, Driver> hashMap0 = null;
      uMeR0.setDrivers((HashMap<String, Driver>) null);
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("", 1.0, point2D_Double0, "");
      Helicopter helicopter1 = new Helicopter(helicopter0);
      Helicopter helicopter2 = helicopter1.clone();
      uMeR0.registerVehicleP(helicopter2);
      // Undeclared exception!
      try { 
        uMeR0.allUsers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn((Vehicle) null).when(vehicle0).clone();
      doReturn((String) null).when(vehicle0).getLicencePlate();
      // Undeclared exception!
      try { 
        uMeR0.registerVehicleP(vehicle0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "";
      try { 
        UMeR.loadUMeR("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      HashMap<String, Driver> hashMap0 = uMeR0.getAllDrivers();
      uMeR0.setAllDrivers(hashMap0);
      uMeR0.getVehiclesP();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      uMeR0.closestAvailableTaxi(client0);
      uMeR0.setDrivers(hashMap0);
      uMeR0.getWeather();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      uMeR0.registerCompanyVehicle((String) null, vehicle0);
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordDriver(comparator0);
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        uMeR0.addQueue("V~agem de (", "", point2D_Double0, point2D_Double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.toString();
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 2879.024557472189).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      ArrayList<Trip> arrayList0 = uMeR0.getTrips();
      uMeR0.setTrips(arrayList0);
      Double double0 = new Double(0.0);
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(3).when(driver0).getExp();
      doReturn(0.0, double0).when(driver0).getTimeCompliance();
      doReturn(0.0).when(driver0).getTotalDistance();
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn((double)3, 2879.024557472189).when(vehicle0).getReliable();
      doReturn(65.0).when(vehicle0).getSpeed();
      uMeR0.realTime(point2D_Double0, point2D_Double0, driver0, vehicle0);
      Trip trip0 = new Trip();
      // Undeclared exception!
      try { 
        trip0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.Trip", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      UMeR uMeR0 = new UMeR();
      String string0 = ")\nPontos : ";
      double double0 = 0.0;
      Helicopter helicopter0 = null;
      try {
        helicopter0 = new Helicopter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      uMeR0.setTotalTime(2206.2904744);
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      doReturn(0.0).when(point2D_Double0).distance(any(java.awt.geom.Point2D.class));
      Point2D.Double point2D_Double1 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.getDriversP();
      uMeR0.estimatedTime(point2D_Double0, point2D_Double1, (-2705.645824362799));
      // Undeclared exception!
      try { 
        uMeR0.addTrip("Z949 m?MzQpgU", (String) null, "", (Trip) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = mock(Point2D.Double.class, new ViolatedAssumptionAnswer());
      uMeR0.newTripSpecific(client0, "6m$..w8&|Y6?r^", point2D_Double0);
      uMeR0.setMoneyGenerated((-985.0));
      uMeR0.getVehiclesP();
      uMeR0.getTrips();
      uMeR0.calculateTraffic((Vehicle) null, 0.0);
      uMeR0.setTripID(0);
      uMeR0.setWeather((-4364));
      uMeR0.registerCompanyVehicle("\n---Number of trips---\n", (Vehicle) null);
      uMeR0.calculateTraffic((Vehicle) null, 1285.4262557772065);
      uMeR0.saveUMeR("c:NF^GJ;gb58qc.FJ");
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      uMeR0.ordDriver(comparator0);
      Client client1 = mock(Client.class, new ViolatedAssumptionAnswer());
      uMeR0.closestAvailableTaxi(client1);
      uMeR0.getTotalDistance();
      uMeR0.setTotalDistance(0.0);
      uMeR0.removeVehicle((Vehicle) null);
      uMeR0.getVehiclesP();
      Client client2 = mock(Client.class, new ViolatedAssumptionAnswer());
      uMeR0.getTrips();
      uMeR0.newTripSpecific(client2, "", (Point2D.Double) null);
      uMeR0.getTripID();
      uMeR0.getDates();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      HashMap<String, Vehicle> hashMap0 = uMeR0.getAllVehicles();
      uMeR0.setVehiclesP(hashMap0);
      uMeR0.getDates();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockLocalDate.now(zoneId0);
      Client client0 = new Client("/4SQtutfq", "6M>*y@*b{ugE(UG]Gz", "`Hb,QxV`Slhp", "XwwF:Lu;MFwNJju", localDate0);
      Point2D.Double point2D_Double0 = client0.getPosition();
      ArrayList<Trip> arrayList0 = uMeR0.getTrips();
      Client client1 = new Client("`Hb,QxV`Slhp", "umer.Company", "umer.Company", "J~", localDate0, point2D_Double0, (-3708.7981636507), arrayList0, 0, 0.0, true, (String) null);
      Driver driver0 = new Driver("", "&<65m|,}yQB,z8kA|8", "J~", "O5Gj@SVojP", localDate0, (-3708.7981636507), "&<65m|,}yQB,z8kA|8");
      Helicopter helicopter0 = new Helicopter("/4SQtutfq", (-3708.7981636507), point2D_Double0, "F0e7)n,WqBU");
      Helicopter helicopter1 = helicopter0.clone();
      uMeR0.newTrip(client1, driver0, helicopter1, point2D_Double0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn((Point2D.Double) null).when(client0).getPosition();
      Boolean boolean0 = Boolean.TRUE;
      Driver driver0 = mock(Driver.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(driver0).isAvailable();
      uMeR0.registerCompany("", "");
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      doReturn((Point2D.Double) null).when(vehicle0).getPosition();
      doReturn(0.0).when(vehicle0).getSpeed();
      // Undeclared exception!
      try { 
        uMeR0.newTrip(client0, driver0, vehicle0, (Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      Point2D.Double point2D_Double0 = new Point2D.Double(0.9, 1744.4196977227);
      Boolean boolean0 = Boolean.FALSE;
      uMeR0.registerCompany("", "");
      Vehicle vehicle0 = mock(Vehicle.class, new ViolatedAssumptionAnswer());
      HashMap<String, Driver> hashMap0 = uMeR0.getAllDrivers();
      uMeR0.setAllDrivers(hashMap0);
      String string0 = "";
      uMeR0.allUsers();
      // Undeclared exception!
      try { 
        uMeR0.changeDriverVehicle("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      UMeR uMeR0 = new UMeR();
      HashMap<String, Driver> hashMap0 = null;
      uMeR0.setDrivers((HashMap<String, Driver>) null);
      Comparator<Driver> comparator0 = (Comparator<Driver>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Point2D.Double point2D_Double0 = new Point2D.Double();
      Helicopter helicopter0 = new Helicopter("", 1.0, point2D_Double0, "");
      helicopter0.printQueue();
      Helicopter helicopter1 = new Helicopter(helicopter0);
      Helicopter helicopter2 = helicopter1.clone();
      uMeR0.registerVehicleP(helicopter2);
      // Undeclared exception!
      try { 
        uMeR0.allUsers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.UMeR", e);
      }
  }
}
