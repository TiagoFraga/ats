package umer;/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 19 09:57:14 GMT 2018
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

import java.time.LocalDate;
import java.util.*;
import java.awt.geom.Point2D;


@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MoneyComparatorC_ESTest extends MoneyComparatorC_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MoneyComparatorC moneyComparatorC0 = new MoneyComparatorC();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn("=4#F;").when(client0).getEmail();
      doReturn((-2398.0115345199947), 1748.1).when(client0).getMoney();
      Client client1 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn("").when(client1).getEmail();
      doReturn((-2398.0115345199947), (-2398.0115345199947)).when(client1).getMoney();
      int int0 = moneyComparatorC0.compare(client0, client1);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MoneyComparatorC moneyComparatorC0 = new MoneyComparatorC();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn((-432.1), 1.0, (-2286.78843639), 1.0).when(client0).getMoney();
      int int0 = moneyComparatorC0.compare(client0, client0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MoneyComparatorC moneyComparatorC0 = new MoneyComparatorC();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn("p%&IJYjJRl_N-it#", "p%&IJYjJRl_N-it#").when(client0).getEmail();
      doReturn((-2279.33636146), (-2279.33636146), (-2279.33636146), (-2279.33636146)).when(client0).getMoney();
      int int0 = moneyComparatorC0.compare(client0, client0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MoneyComparatorC moneyComparatorC0 = new MoneyComparatorC();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn(924.612734, 1.0).when(client0).getMoney();
      int int0 = moneyComparatorC0.compare(client0, client0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MoneyComparatorC moneyComparatorC0 = new MoneyComparatorC();
      Client client0 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(client0).getEmail();
      doReturn(0.0, 0.0).when(client0).getMoney();
      Client client1 = mock(Client.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(client1).getEmail();
      doReturn(0.0, 0.0).when(client1).getMoney();
      // Undeclared exception!
      try { 
        moneyComparatorC0.compare(client0, client1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umer.MoneyComparatorC", e);
      }
  }

  /* Teste manual */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
        MoneyComparatorC moneyComparatorC0 = new MoneyComparatorC();
        Point2D.Double Pontposition = new Point2D.Double(0,0);
        ArrayList<Trip> trips = new ArrayList<Trip>();
        String queue = "A";
        LocalDate d1 = LocalDate.of(1995,12,12);
        Client cliente1 = new Client("b70676@di.uminho.pt","Marcos de Morais Luis","1234","Bairro do malhao",d1, Pontposition, 0.0, trips, 0, 10.0, false, queue );
        Client cliente2 = new Client("a70951@di.uminho.pt","Pedro Miguel Lopes Pereira","1234","Rua da Alegria",d1, Pontposition, 0.0, trips, 0, 10.0, false, queue);
        int int0 = moneyComparatorC0.compare(cliente1, cliente2);
        assertEquals(1, int0);
    }

}
